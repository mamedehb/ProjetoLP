package br.com.bandtec.projeto;

import java.util.Random;

/**
 *
 * @author CamilaM
 */
public class Leitura extends javax.swing.JFrame {

    Integer contadorCPU = 0;
    Integer contadorDisco = 0;
    Integer contadorMem = 0;
    
    Double numeroMediaCPU = 0.0;
    Integer numeroMaxCPU = 0;
    Integer numeroMinCPU = 100;
    
    Double numeroMediaDisco = 0.0;
    Integer numeroMaxDisco = 0;
    Integer numeroMinDisco = 100;
    
    Double numeroMediaMem = 0.0;
    Integer numeroMaxMem = 0;
    Integer numeroMinMem = 100;
    
    
    public Leitura() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMinCPU = new javax.swing.JLabel();
        lblNSorteadoCPU = new javax.swing.JLabel();
        lblMediaCPU = new javax.swing.JLabel();
        lblNSorteadoDisco = new javax.swing.JLabel();
        lblMaxDisco = new javax.swing.JLabel();
        lblNSorteadoMem = new javax.swing.JLabel();
        lblMinDisco = new javax.swing.JLabel();
        lblMediaDisco = new javax.swing.JLabel();
        lblMaxMem = new javax.swing.JLabel();
        lblMinMem = new javax.swing.JLabel();
        lblMediaMem = new javax.swing.JLabel();
        lblLeituraCPU = new javax.swing.JLabel();
        prgCPU = new javax.swing.JProgressBar();
        prgDisco = new javax.swing.JProgressBar();
        prgMem = new javax.swing.JProgressBar();
        lblCPU = new javax.swing.JLabel();
        lblDisco = new javax.swing.JLabel();
        lblMemoria = new javax.swing.JLabel();
        btnLeitura = new javax.swing.JButton();
        lblLeituraDisco = new javax.swing.JLabel();
        lblMaxCPU = new javax.swing.JLabel();
        lblLeituraMem = new javax.swing.JLabel();
        lblRMaxCPU = new javax.swing.JLabel();
        lblRMediaCPU = new javax.swing.JLabel();
        lblRMinCPU = new javax.swing.JLabel();
        lblRMaxDisco = new javax.swing.JLabel();
        lblRMinDisco = new javax.swing.JLabel();
        lblRMediaDisco = new javax.swing.JLabel();
        lblRMaxMem = new javax.swing.JLabel();
        lblRMinMem = new javax.swing.JLabel();
        lblRMediaMem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblMinCPU.setText("Valor Mínimo:");

        lblNSorteadoCPU.setText("%");

        lblMediaCPU.setText("Média:");

        lblNSorteadoDisco.setText("%");

        lblMaxDisco.setText("Valor Máximo:");

        lblNSorteadoMem.setText("%");

        lblMinDisco.setText("Valor Mínimo:");

        lblMediaDisco.setText("Média:");

        lblMaxMem.setText("Valor Máximo:");

        lblMinMem.setText("Valor Mínimo:");

        lblMediaMem.setText("Média:");

        lblLeituraCPU.setText("Leitura:");

        lblCPU.setText("CPU");

        lblDisco.setText("Disco");

        lblMemoria.setText("Memória");

        btnLeitura.setText("Realizar leitura de dados");
        btnLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeituraActionPerformed(evt);
            }
        });

        lblLeituraDisco.setText("Leitura:");

        lblMaxCPU.setText("Valor Máximo: ");

        lblLeituraMem.setText("Leitura:");

        lblRMaxCPU.setText("%");

        lblRMediaCPU.setText("%");

        lblRMinCPU.setText("%");

        lblRMaxDisco.setText("%");

        lblRMinDisco.setText("%");

        lblRMediaDisco.setText("%");

        lblRMaxMem.setText("%");

        lblRMinMem.setText("%");

        lblRMediaMem.setText("%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(prgCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMaxCPU)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblRMaxCPU))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMinCPU)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblRMinCPU))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMediaCPU)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblRMediaCPU))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLeituraCPU)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblNSorteadoCPU))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(lblCPU)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLeitura)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(lblDisco))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMinDisco)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblRMinDisco))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMediaDisco)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblRMediaDisco))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblLeituraDisco)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblNSorteadoDisco))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblMaxDisco)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblRMaxDisco))))
                            .addComponent(prgDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblMemoria)
                                        .addGap(135, 135, 135))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblMinMem)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblRMinMem))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblMediaMem)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblRMediaMem))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblMaxMem)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblRMaxMem))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblLeituraMem)
                                                .addGap(32, 32, 32)
                                                .addComponent(lblNSorteadoMem)))
                                        .addGap(109, 109, 109))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prgMem, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(prgCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblLeituraCPU)
                                    .addComponent(lblNSorteadoCPU))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMaxCPU)
                                    .addComponent(lblRMaxCPU))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMinCPU)
                                    .addComponent(lblRMinCPU))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMediaCPU)
                                    .addComponent(lblRMediaCPU)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblDisco)
                                            .addComponent(lblMemoria))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(prgDisco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(prgMem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblLeituraDisco)
                                    .addComponent(lblNSorteadoDisco))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMaxDisco)
                                    .addComponent(lblRMaxDisco))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMinDisco)
                                    .addComponent(lblRMinDisco))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblMediaDisco)
                                    .addComponent(lblRMediaDisco))))
                        .addGap(85, 85, 85)
                        .addComponent(btnLeitura))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCPU)
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLeituraMem)
                            .addComponent(lblNSorteadoMem))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaxMem)
                            .addComponent(lblRMaxMem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMinMem)
                            .addComponent(lblRMinMem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMediaMem)
                            .addComponent(lblRMediaMem))))
                .addContainerGap(203, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeituraActionPerformed
            
        prgCPU.setStringPainted(true);
       
        Random aleatorioCPU = new Random();
        Integer nsorteadoCPU = aleatorioCPU.nextInt(101);
        String nsorteadoCPUText = nsorteadoCPU.toString();
        lblNSorteadoCPU.setText(nsorteadoCPUText);
        prgCPU.setValue(nsorteadoCPU);
       
        
        if (nsorteadoCPU > numeroMaxCPU) { 
            numeroMaxCPU = nsorteadoCPU;
            String nmaxCPUText = nsorteadoCPU.toString();
            lblRMaxCPU.setText(nmaxCPUText);
        }
              
        if (nsorteadoCPU < numeroMinCPU){
            numeroMinCPU = nsorteadoCPU;
            String nminCPUText = nsorteadoCPU.toString();
            lblRMinCPU.setText(nminCPUText);
        }
                
        contadorCPU++;
        
        numeroMediaCPU += nsorteadoCPU;
        Double mediaTotalCPU = numeroMediaCPU / contadorCPU;
        String nmediaCPUText = mediaTotalCPU.toString();
        lblRMediaCPU.setText(String.format("%.2f", mediaTotalCPU));

        
        
        prgDisco.setStringPainted(true);
        
        Random aleatorioDisco = new Random();
        Integer nsorteadoDisco = aleatorioDisco.nextInt(101);
        String nsorteadoDiscoText = nsorteadoDisco.toString();
        lblNSorteadoDisco.setText(nsorteadoDiscoText);
        prgDisco.setValue(nsorteadoDisco);
        
        
        if (nsorteadoDisco > numeroMaxDisco) { 
            numeroMaxDisco = nsorteadoDisco;
            String nmaxDiscoText = nsorteadoDisco.toString();
            lblRMaxDisco.setText(nmaxDiscoText);
        }
              
        if (nsorteadoDisco < numeroMinDisco){
            numeroMinDisco = nsorteadoDisco;
            String nminDiscoText = nsorteadoDisco.toString();
            lblRMinDisco.setText(nminDiscoText);
        }
                
        contadorDisco++;
        
        numeroMediaDisco += nsorteadoDisco;
        Double mediaTotalDisco = numeroMediaDisco / contadorDisco;
        String nmediaDiscoText = mediaTotalDisco.toString();
        lblRMediaDisco.setText(String.format("%.2f", mediaTotalDisco));
        
        
        
        
        prgMem.setStringPainted(true);
        
        Random aleatorioMem = new Random();
        Integer nsorteadoMem = aleatorioMem.nextInt(101);
        String nsorteadoMemText = nsorteadoMem.toString();
        lblNSorteadoMem.setText(nsorteadoMemText);
        prgMem.setValue(nsorteadoMem);
        
        if (nsorteadoMem > numeroMaxMem) { 
            numeroMaxMem = nsorteadoMem;
            String nmaxMemText = nsorteadoMem.toString();
            lblRMaxMem.setText(nmaxMemText);
        }
              
        if (nsorteadoMem < numeroMinMem){
            numeroMinMem = nsorteadoMem;
            String nminMemText = nsorteadoMem.toString();
            lblRMinMem.setText(nminMemText);
        }
                
        contadorMem++;
        
        numeroMediaMem += nsorteadoMem;
        Double mediaTotalMem = numeroMediaMem / contadorMem;
        String nmediaMemText = mediaTotalMem.toString();
        lblRMediaMem.setText(String.format("%.2f", mediaTotalMem));
        

    }//GEN-LAST:event_btnLeituraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Leitura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Leitura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Leitura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Leitura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Leitura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLeitura;
    private javax.swing.JLabel lblCPU;
    private javax.swing.JLabel lblDisco;
    private javax.swing.JLabel lblLeituraCPU;
    private javax.swing.JLabel lblLeituraDisco;
    private javax.swing.JLabel lblLeituraMem;
    private javax.swing.JLabel lblMaxCPU;
    private javax.swing.JLabel lblMaxDisco;
    private javax.swing.JLabel lblMaxMem;
    private javax.swing.JLabel lblMediaCPU;
    private javax.swing.JLabel lblMediaDisco;
    private javax.swing.JLabel lblMediaMem;
    private javax.swing.JLabel lblMemoria;
    private javax.swing.JLabel lblMinCPU;
    private javax.swing.JLabel lblMinDisco;
    private javax.swing.JLabel lblMinMem;
    private javax.swing.JLabel lblNSorteadoCPU;
    private javax.swing.JLabel lblNSorteadoDisco;
    private javax.swing.JLabel lblNSorteadoMem;
    private javax.swing.JLabel lblRMaxCPU;
    private javax.swing.JLabel lblRMaxDisco;
    private javax.swing.JLabel lblRMaxMem;
    private javax.swing.JLabel lblRMediaCPU;
    private javax.swing.JLabel lblRMediaDisco;
    private javax.swing.JLabel lblRMediaMem;
    private javax.swing.JLabel lblRMinCPU;
    private javax.swing.JLabel lblRMinDisco;
    private javax.swing.JLabel lblRMinMem;
    private javax.swing.JProgressBar prgCPU;
    private javax.swing.JProgressBar prgDisco;
    private javax.swing.JProgressBar prgMem;
    // End of variables declaration//GEN-END:variables

    private Integer MAX_VALUE(Integer nsorteadoCPU) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
